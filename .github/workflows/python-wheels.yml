# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) Contributors to the OpenEXR Project.
#

name: Python wheels

on:
  push:
    branches-ignore:
      - RB-2.*
    tags-ignore:
      - v1.*
      - v2.*
    paths:
      - '**'
      - '!**.md'
      - '!website/**'
      - 'website/src/**'
      - '!bazel/**'
  pull_request:
    branches-ignore:
      - RB-2.*
    tags-ignore:
      - v1.*
      - v2.*
    paths:
      - '**'
      - '!**.md'
      - '!website/**'
      - 'website/src/**'
      - '!bazel/**'

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build Python wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4
        with:
            python-version: '3.x'

      - name: Create setup.py
        run: |
            mv src/wrappers/python/pyproject.toml ./pyproject.toml
            mv src/wrappers/python/setup.py ./setup.py
            mv src/wrappers/python/set_version.py ./set_version.py
            mv src/wrappers/python/Imath.py ./Imath.py
            mv src/wrappers/python/OpenEXR.cpp ./OpenEXR.cpp
            python set_version.py
            rm set_version.py
            cat pyproject.toml
        shell: bash

      - name: Build the source distribution
        run: python setup.py sdist
        if: runner.os == 'Linux'

      - uses: actions/upload-artifact@v3
        id: build_wheels
        with:
          name: python-wheels-sdist
          path: ./dist/*

  build_Linux_x86_64:
    name: Build Linux_x86_64
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["ubuntu-22.04"]'
      arch: "x86_64"
      test: "true"
    secrets: inherit

  build_Windows_AMD64:
    name: Build Windows_AMD64
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["windows-latest"]'
      arch: "AMD64"
      test: "true"
    secrets: inherit

  build_MacOS_x86_64:
    name: Build Windows_x86_64
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["macOS-latest"]'
      arch: "x86_64"
      test: "true"
    secrets: inherit

  # i686 is quite fast to build, so we let it go always just to can test the
  # emulated buildings are working
  build_Linux_i686:
    name: Build Linux_i686
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["ubuntu-22.04"]'
      arch: "i686"
      test: "true"
    secrets: inherit

  build_Linux_aarch64:
    name: Build Linux_aarch64
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["ubuntu-22.04"]'
      arch: "aarch64"
      test: "true"
    secrets: inherit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  build_Linux_ppc64le:
    name: Build Linux_ppc64le
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["ubuntu-22.04"]'
      arch: "ppc64le"
      test: "true"
    secrets: inherit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  build_Linux_s390x:
    name: Build Linux_s390x
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["ubuntu-22.04"]'
      arch: "s390x"
      test: "true"
    secrets: inherit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  build_MacOS_universal2:
    name: Build MacOS_universal2
    uses: sanguinariojoe/openexr/.github/workflows/python-wheels-emulated.yml@wheels
    with:
      os: '["macOS-latest"]'
      arch: "universal2"
      test: "true"
    secrets: inherit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

  publish:
    runs-on: ${{ matrix.os }}
    needs: [build_wheels, build_Linux_x86_64, build_Windows_AMD64, build_MacOS_x86_64, build_Linux_i686, build_Linux_aarch64, build_Linux_ppc64le, build_Linux_s390x, build_MacOS_universal2]
    strategy:
        matrix:
            os: [ubuntu-22.04]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: python-wheels
          path: dist/

      - name: Download Linux_x86_64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_x86_64
          path: dist/

      - name: Download Windows_AMD64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Windows_AMD64
          path: dist/

      - name: Download MacOS_x86_64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-MacOS_x86_64
          path: dist/

      - name: Download Linux_i686
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_i686
          path: dist/

      - name: Download Linux_aarch64
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_aarch64
          path: dist/

      - name: Download Linux_ppc64le
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_ppc64le
          path: dist/

      - name: Download Linux_s390x
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-Linux_s390x
          path: dist/

      - name: Download MacOS_universal2
        uses: actions/download-artifact@v3
        with:
          name: python-wheels-MacOS_universal2
          path: dist/

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.OPENEXR_PYPI_API }}
          repository-url: https://upload.pypi.org/legacy/
          skip-existing: true
