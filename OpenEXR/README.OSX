OpenEXR has only been tested on OS X 10.2 (Jaguar).  There's a bug in
Apple's istream::read implementation in 10.2 that breaks OpenEXR when
an end-of-file is reached.  There is a workaround for the bug, but it's
pretty ugly, so you have to explicity enable the workaround when you
compile OpenEXR using the --enable-osx-istream-hack configure option.

The workaround and the details of the bug are shown below.  We don't
guarantee that it works in all cases.  Thanks to our resident Mac
programming guru, Paul Schneider <pauls@ilm.com>, for the workaround and 
bug details.  

Workaround:
------------

The hack is in checkError (istream&) in ImfIO.cpp.  It clears the error bits
on the stream.  This is a horribly fragile solution, because a) those bits 
might be correctly set if you really did try to read off the end of the
stream, and b) after a call to istream::read that grabs the last byte in
the stream, the stream is unusable until someone calls checkError on it. 
OpenEXR and the confidence tests always call checkError after reading
a stream.


Bug details:
------------

In gcc 3.1, basic_istream::read is implemented starting at line 771 in
bits/istream.tcc.  Note that the variable __c is read at the
end of the loop at line 790.  The result is that when the loop is
finished, __c contains the character *after* the last character inserted
into the output array __s.  This means that if the last byte of the stream
is requested, __c contains EOF.  After the loop, if __c contains EOF, the
stream's eofbit and failbit are set (line 793).  This is incorrect if all
of the requested characters were inserted into the output stream before
EOF was read.  One possible fix would be to add a check for 
_M_gcount < __n on line 792, in addition to the check for __eof.


Using CodeWarrior:
------------------

If you have Metrowerks CodeWarrior, you can download the separate
CodeWarrior project files and use it to build OpenEXR.  CodeWarrior
doesn't require the istream workaround.  See here for the project
files:

http://savannah.nongnu.org/files/?group=openexr

