OpenEXR on MacOS X
------------------

Building OpenEXR on MacOS X is just like building it on GNU/Linux.
Follow the instructions in the README file under BUILDLING OPENEXR,
but see below re: shared libraries.

Missing gnu automake tools on  Mac OS X 10.8+
------------------
Later versions of OS X ,10.8+, do not, by default have all the necessary 
tools for building. In particular,  Autoconf and Automake may be missing. 

The following commands will download and install the necessary components:

cd ~/myDevLoc
curl -OL http://ftpmirror.gnu.org/autoconf/autoconf-2.64.tar.gz
tar xzf autoconf-2.64.tar.gz
cd autoconf-2.64
./configure --prefix=~/myDevLoc/autotools-bin
make; make install

cd ~/myDevLoc
curl -OL http://ftpmirror.gnu.org/automake/automake-1.12.tar.gz
tar xzf automake-1.12.tar.gz
cd automake-1.12
./configure --prefix=~/myDevLoc/autotools-bin
make; make install

cd ~/myDevLoc
curl -OL http://ftpmirror.gnu.org/libtool/libtool-2.4.tar.gz
tar xzf libtool-2.4.tar.gz
cd libtool-2.4
./configure --prefix=~/myDevLoc/autotools-bin
make; make install


You may want to export the installation path for your convenience.
Finally, make sure that you have installed the command line tools for XCode.


Universal Builds on Mac OS X
------------------

On OS X 10.4, you can build universal binaries by passing
'--enable-osx-universal-binaries --disable-dependency-tracking' to the
configure script.  The default is *not* to build universal binaries.


Shared libraries
----------------

OpenEXR requires the "flat namespace" option when built as a shared
library.  You may have problems trying to use OpenEXR shared libraries
with applications that expect OS X's two-level namespace.  We have not
tested the shared libs extensively, though they appear to work with
exrdisplay and exrheader, but use them at your own risk.  We will
support two-level namespace shared libs in a future release.
