# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) Contributors to the OpenEXR Project.

def define_openexr_tests(test_list):
    for test_name in test_list:
        native.cc_test(
            name = "OpenEXR." + test_name,
            timeout = "moderate",
            srcs = [
                "src/test/OpenEXRTest/compareB44.cpp",
                "src/test/OpenEXRTest/compareDwa.cpp",
                "src/test/OpenEXRTest/compareFloat.cpp",
                "src/test/OpenEXRTest/main.cpp",
                "src/test/OpenEXRTest/random.cpp",
                "src/test/OpenEXRTest/testAttributes.cpp",
                "src/test/OpenEXRTest/testB44ExpLogTable.cpp",
                "src/test/OpenEXRTest/testBackwardCompatibility.cpp",
                "src/test/OpenEXRTest/testBadTypeAttributes.cpp",
                "src/test/OpenEXRTest/testChannels.cpp",
                "src/test/OpenEXRTest/testCompositeDeepScanLine.cpp",
                "src/test/OpenEXRTest/testCompression.cpp",
                "src/test/OpenEXRTest/testConversion.cpp",
                "src/test/OpenEXRTest/testCopyDeepScanLine.cpp",
                "src/test/OpenEXRTest/testCopyDeepTiled.cpp",
                "src/test/OpenEXRTest/testCopyMultiPartFile.cpp",
                "src/test/OpenEXRTest/testCopyPixels.cpp",
                "src/test/OpenEXRTest/testCustomAttributes.cpp",
                "src/test/OpenEXRTest/testDeepScanLineBasic.cpp",
                "src/test/OpenEXRTest/testDeepScanLineHuge.cpp",
                "src/test/OpenEXRTest/testDeepScanLineMultipleRead.cpp",
                "src/test/OpenEXRTest/testDeepTiledBasic.cpp",
                "src/test/OpenEXRTest/testDwaCompressorSimd.cpp",
                "src/test/OpenEXRTest/testDwaLookups.cpp",
                "src/test/OpenEXRTest/testExistingStreams.cpp",
                "src/test/OpenEXRTest/testFutureProofing.cpp",
                "src/test/OpenEXRTest/testHuf.cpp",
                "src/test/OpenEXRTest/testIDManifest.cpp",
                "src/test/OpenEXRTest/testInputPart.cpp",
                "src/test/OpenEXRTest/testIsComplete.cpp",
                "src/test/OpenEXRTest/testLargeDataWindowOffsets.cpp",
                "src/test/OpenEXRTest/testLineOrder.cpp",
                "src/test/OpenEXRTest/testLut.cpp",
                "src/test/OpenEXRTest/testMagic.cpp",
                "src/test/OpenEXRTest/testMalformedImages.cpp",
                "src/test/OpenEXRTest/testMultiPartApi.cpp",
                "src/test/OpenEXRTest/testMultiPartFileMixingBasic.cpp",
                "src/test/OpenEXRTest/testMultiPartSharedAttributes.cpp",
                "src/test/OpenEXRTest/testMultiPartThreading.cpp",
                "src/test/OpenEXRTest/testMultiScanlinePartThreading.cpp",
                "src/test/OpenEXRTest/testMultiTiledPartThreading.cpp",
                "src/test/OpenEXRTest/testMultiView.cpp",
                "src/test/OpenEXRTest/testNativeFormat.cpp",
                "src/test/OpenEXRTest/testOptimized.cpp",
                "src/test/OpenEXRTest/testOptimizedInterleavePatterns.cpp",
                "src/test/OpenEXRTest/testPartHelper.cpp",
                "src/test/OpenEXRTest/testPreviewImage.cpp",
                "src/test/OpenEXRTest/testRgba.cpp",
                "src/test/OpenEXRTest/testRgbaThreading.cpp",
                "src/test/OpenEXRTest/testRle.cpp",
                "src/test/OpenEXRTest/testSampleImages.cpp",
                "src/test/OpenEXRTest/testScanLineApi.cpp",
                "src/test/OpenEXRTest/testSharedFrameBuffer.cpp",
                "src/test/OpenEXRTest/testStandardAttributes.cpp",
                "src/test/OpenEXRTest/testTiledCompression.cpp",
                "src/test/OpenEXRTest/testTiledCopyPixels.cpp",
                "src/test/OpenEXRTest/testTiledLineOrder.cpp",
                "src/test/OpenEXRTest/testTiledRgba.cpp",
                "src/test/OpenEXRTest/testTiledYa.cpp",
                "src/test/OpenEXRTest/testWav.cpp",
                "src/test/OpenEXRTest/testXdr.cpp",
                "src/test/OpenEXRTest/testYca.cpp",
            ] + native.glob(["src/test/OpenEXRTest/*.h"]),
            args = [test_name],
            data = native.glob([
                "src/test/OpenEXRTest/*.exr",
            ]),
            defines = [
                "ILM_IMF_TEST_IMAGEDIR=\\\"src/test/OpenEXRTest/\\\"",
                "IMF_TMP_DIR=\\\"/tmp/\\\"",
            ],
            includes = ["src/test/OpenEXRTest"],
            deps = [
                ":OpenEXR",
            ],
        )
