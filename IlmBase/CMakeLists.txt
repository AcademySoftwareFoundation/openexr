
IF (WIN32)
    CMAKE_MINIMUM_REQUIRED(VERSION 3.11)
ELSE()
    CMAKE_MINIMUM_REQUIRED(VERSION 3.2)
ENDIF()

PROJECT ( ilmbase )

set(ILMBASE_BASEVERSION   ${OPENEXR_BASEVERSION})
set(ILMBASE_VERSION_MAJOR ${OPENEXR_VERSION_MAJOR})
set(ILMBASE_VERSION_MINOR ${OPENEXR_VERSION_MINOR})
set(ILMBASE_VERSION_PATCH ${OPENEXR_VERSION_PATCH})
set(ILMBASE_VERSION       ${OPENEXR_VERSION})
set(ILMBASE_VERSION_API   ${OPENEXR_VERSION_API})

INCLUDE_DIRECTORIES ( Iex IexMath Imath Half
    IlmThread IexTest ImathTest HalfTest
    ${CMAKE_CURRENT_BINARY_DIR}/config )

IF(WIN32)
  SET(CMAKE_DEBUG_POSTFIX "_d")
ENDIF()

# also add the current directory to pick up the autogenerated headers
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

ADD_SUBDIRECTORY ( Half )
ADD_SUBDIRECTORY ( Iex )
ADD_SUBDIRECTORY ( IexMath )
ADD_SUBDIRECTORY ( Imath )
ADD_SUBDIRECTORY ( IlmThread )


##########################
# IlmBaseConfig.h generation
##########################

# By using a temp file then using configure_file below with copy, we
# avoid constantly updating it (unless a value has changed)
SET(ILMBASE_TMP_CONFIG ${CMAKE_CURRENT_BINARY_DIR}/config/IlmBaseConfig.h.in)
IF (WIN32)
  FILE ( WRITE  ${ILMBASE_TMP_CONFIG} "#ifdef HAVE_PTHREAD\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "# undef HAVE_PTHREAD\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#endif\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#ifdef HAVE_POSIX_SEMAPHORES\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "# undef HAVE_POSIX_SEMAPHORES\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#endif\n" )
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define PLATFORM_WINDOWS 1\n" )
ELSE ()
  IF (APPLE)
    FILE ( WRITE  ${ILMBASE_TMP_CONFIG} "#define HAVE_PTHREAD 1\n" )
  ELSE ()
    FILE ( WRITE  ${ILMBASE_TMP_CONFIG} "#define HAVE_PTHREAD 1\n" )
    FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_HAVE_LARGE_STACK  1\n" )
    FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define HAVE_POSIX_SEMAPHORES 1\n" )
    FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_HAVE_CONTROL_REGISTER_SUPPORT 1\n")
  ENDIF ()
ENDIF ()

IF (OPENEXR_FORCE_CXX03)
  FILE ( APPEND  ${ILMBASE_TMP_CONFIG} "#define ILMBASE_FORCE_CXX03 1\n" )
ELSEIF (NOT WIN32)
  # really only care about c++11 right now for the threading bits, but this can be changed to 14
  # when needed...
  # Note that the __cplusplus check is not valid under MSVC
  FILE ( APPEND  ${ILMBASE_TMP_CONFIG} "#if __cplusplus < 201103L\n# error \"Modern C++ 11/14 not enabled but force cxx03 not set\"\n#endif\n" )
ENDIF ()

IF (OPENEXR_NAMESPACE_VERSIONING)
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_INTERNAL_NAMESPACE_CUSTOM 1\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IMATH_INTERNAL_NAMESPACE Imath_${ILMBASE_VERSION_API}\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IEX_INTERNAL_NAMESPACE Iex_${ILMBASE_VERSION_API}\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMTHREAD_INTERNAL_NAMESPACE IlmThread_${ILMBASE_VERSION_API}\n")
ELSE ()
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_INTERNAL_NAMESPACE_CUSTOM 0\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IMATH_INTERNAL_NAMESPACE Imath\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IEX_INTERNAL_NAMESPACE Iex\n")
  FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMTHREAD_INTERNAL_NAMESPACE IlmThread\n")
ENDIF ()

FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IMATH_NAMESPACE Imath\n")
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define IEX_NAMESPACE Iex\n")
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMTHREAD_NAMESPACE IlmThread\n")
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_VERSION_STRING \"${ILMBASE_VERSION}\"\n" )
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_PACKAGE_STRING \"IlmBase ${ILMBASE_VERSION}\"\n" )
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_VERSION_MAJOR ${ILMBASE_VERSION_MAJOR}\n" )
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_VERSION_MINOR ${ILMBASE_VERSION_MINOR}\n" )
FILE ( APPEND ${ILMBASE_TMP_CONFIG} "#define ILMBASE_VERSION_PATCH ${ILMBASE_VERSION_PATCH}\n" )

FILE ( APPEND ${ILMBASE_TMP_CONFIG} "
// Version as a single hex number, e.g. 0x01000300 == 1.0.3
#define ILMBASE_VERSION_HEX ((ILMBASE_VERSION_MAJOR << 24) | \\
                             (ILMBASE_VERSION_MINOR << 16) | \\
                             (ILMBASE_VERSION_PATCH <<  8))
")

CONFIGURE_FILE ( ${ILMBASE_TMP_CONFIG} ${CMAKE_CURRENT_BINARY_DIR}/config/IlmBaseConfig.h COPYONLY )
FILE ( REMOVE ${ILMBASE_TMP_CONFIG} )
UNSET ( ILMBASE_TMP_CONFIG )


# Tests
IF ( ENABLE_TESTS )
  ADD_SUBDIRECTORY ( HalfTest )
  ADD_SUBDIRECTORY ( IexTest )
  ADD_SUBDIRECTORY ( ImathTest )
ENDIF ()

# Installation

INSTALL ( FILES
  ${CMAKE_CURRENT_BINARY_DIR}/config/IlmBaseConfig.h
  DESTINATION
  ${CMAKE_INSTALL_INCLUDEDIR}/OpenEXR
)

if ( NOT WIN32 )
  configure_file(IlmBase.pc.cmake "${CMAKE_CURRENT_BINARY_DIR}/IlmBase.pc" @ONLY)
  install( FILES "${CMAKE_CURRENT_BINARY_DIR}/IlmBase.pc" DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig COMPONENT dev )
endif()
